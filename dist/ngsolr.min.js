/*! ngSolr - v0.6.1 - 2019-03-20 */

"use strict";function SolrFacet(Field,Value){var self=this;self.field=Field,self.value=Value,self.options={},self.getOption=function(Name){return self.options[Name]},self.getUrlFragment=function(){var query="";query+="&fq="+self.field+":"+self.value;for(var option in self.options)self.options.hasOwnProperty(option)&&(query+="&"+option+"="+self.options[option]);return query},self.setOption=function(Name,Value){self.options[Name]=Value}}function SolrQuery(Url){var self=this;self.error=void 0,self.facets=[],self.facet_counts={},self.highlighting={},self.options={},self.nearMatch=!1,self.query="*:*",self.queryParameters=[],self.response={},self.responseHeader={},self.solr=Url,self.addFacet=function(Facet){for(var i=0;i<self.facets.length;i++)if(self.facets[i].field===Facet.field&&self.facets[i].value===Facet.value)return;self.facets.push(Facet)},self.addQueryParameter=function(Parameter){for(var i=0;i<self.queryParameters.length;i++)if(self.queryParameters[i]===Parameter)return;self.queryParameters.push(Parameter)},self.createFacet=function(Name,Value){return new SolrFacet(Name,Value)},self.getErrorMessage=function(){return self.error},self.getFacet=function(Name){for(var i in self.facets)if(self.facets[i].field===Name)return self.facets[i]},self.getFacetCounts=function(){return self.facet_counts},self.getFacets=function(){return self.facets},self.getHash=function(){return"/"+self.getQuery()},self.getOption=function(Name){if(self.options[Name])return self.options[Name]},self.getQuery=function(){var query="q="+self.query;self.nearMatch&&(query+="~");for(var i=0;i<self.queryParameters.length;i++)query+=" "+self.queryParameters[i];for(i=0;i<self.facets.length;i++){query+=self.facets[i].getUrlFragment()}for(var key2 in self.options)if(self.options.hasOwnProperty(key2)){var val=self.options[key2];query+="&"+key2+"="+val}return query},self.getSolrQueryUrl=function(){return self.solr+"/select?"+encodeURI(self.getQuery())},self.getUserQuery=function(){return self.query},self.getUserQueryParameters=function(){return self.queryParameters},self.hasFacet=function(Name){return!!self.getFacet(Name)},self.removeFacet=function(Name){for(var i=0;i<self.facets.length;i++)if(self.facets[i].field===Name)return void self.removeFacetByIndex(i)},self.removeFacetByIndex=function(Index){self.facets.splice(Index,1)},self.removeOption=function(Name){delete self.options[Name]},self.setErrorMessage=function(Msg){self.error=Msg},self.setFacetCounts=function(FacetCounts){self.facet_counts=FacetCounts},self.setHighlighting=function(Highlighting){self.highlighting=Highlighting},self.setNearMatch=function(nearMatch){!0!==nearMatch&&!1!==nearMatch||(self.nearMatch=nearMatch)},self.setOption=function(Name,Value){if("fq"===Name){var fq=self.getOption(Name);self.options[Name]=void 0!==fq&&""===fq?fq+" +"+Value:"+"+Value}else self.options[Name]=Value},self.setQueryParameters=function(Parameters){self.queryParameters=Parameters},self.setResponse=function(Response){self.response=Response},self.setResponseHeader=function(Header){self.responseHeader=Header},self.setUserQuery=function(Query){self.query=Query}}var app=angular.module("ngSolr",["ngRoute","ngSanitize"]);app.constant("Cfg",{api:"api/data/",env:["development","staging","production"]}),app.constant("Solr",{defaultQuery:function(query){var f=query.createFacet("location_0_coordinate","*");return query.addFacet(f),query.setOption("fl","*"),query.setOption("rows","5000"),query.setOption("sort","title+asc"),query.setOption("wt","json"),query.setUserQuery("*:*"),query}}),app.config(["$routeProvider",function($routeProvider){$routeProvider.when("/:query",{event:"/query"}).otherwise({event:"/"})}]),angular.module("ngSolr").controller("DateFacetController",["$scope","$attrs","$location","$route","$routeParams","SolrSearchService","Utils",function($scope,$attrs,$location,$route,$routeParams,SolrSearchService,Utils){var date,dateRange,endDateQuery,endDateResults,end_value,end_year,f,hash,i,item,query,start_value,start_year,startDateQuery,startDateResults,yearEnd,yearStart;$scope._endDate=0,$scope._startDate=0,$scope.endDate=0,$scope.endDateField="toDate",$scope.endDateQueryName="endDateQuery",$scope.source=void 0,$scope.startDate=0,$scope.startDateField="fromDate",$scope.startDateQueryName="startDateQuery",$scope.updateOnInit=!0,$scope.userquery="*:*",$scope.getDateRangeConstraint=function(StartDateField,StartDate,EndDateField,EndDate){return yearStart="-01-01T00:00:00Z",yearEnd="-12-31T23:59:59Z",dateRange="+(",dateRange+=StartDateField+":[ * TO "+EndDate+yearEnd+" ]",dateRange+=" AND ",dateRange+=EndDateField+":[ "+StartDate+yearStart+" TO * ]",dateRange+=")"},$scope.getFirstDateRecord=function(Items,FieldName){return Items&&Items.docs&&Items.docs.length>0&&(item=Items.docs[0],void 0!==(date=item[FieldName]))?(i=date.indexOf("-"),date.substring(0,i)):0},$scope.handleEndDateQueryUpdate=function(){(endDateResults=SolrSearchService.getResponse($scope.endDateQueryName))&&($scope._endDate=$scope.getFirstDateRecord(endDateResults,$scope.endDateField),$scope.endDate=$scope.getFirstDateRecord(endDateResults,$scope.endDateField))},$scope.handleStartDateQueryUpdate=function(){(startDateResults=SolrSearchService.getResponse($scope.startDateQueryName))&&($scope._startDate=$scope.getFirstDateRecord(startDateResults,$scope.startDateField),$scope.startDate=$scope.getFirstDateRecord(startDateResults,$scope.startDateField))},$scope.handleUpdate=function(){hash=$routeParams.query||"",query=hash?SolrSearchService.getQueryFromHash(hash,$scope.source):SolrSearchService.createQuery($scope.source),f=query.getFacet($scope.endDateField),f?(start_year=f.value.replace("[","").replace("-01-01T00:00:00Z TO *]",""),$scope._startDate=start_year,$scope.startDate=start_year,$scope.updateFlag+=1):(startDateQuery=SolrSearchService.createQuery($scope.source),startDateQuery.setOption("fl",$scope.startDateField),startDateQuery.setOption("rows","1"),startDateQuery.setOption("sort",$scope.startDateField+" asc"),startDateQuery.setUserQuery($scope.userquery),SolrSearchService.setQuery($scope.startDateQueryName,startDateQuery),SolrSearchService.updateQuery($scope.startDateQueryName)),f=query.getFacet($scope.startDateField),f?(end_year=f.value.replace("[* TO ","").replace("-12-31T23:59:59Z]",""),$scope._endDate=end_year,$scope.endDate=end_year,$scope.updateFlag+=1):(endDateQuery=SolrSearchService.createQuery($scope.source),endDateQuery.setOption("fl",$scope.endDateField),endDateQuery.setOption("rows","1"),endDateQuery.setOption("sort",$scope.endDateField+" desc"),endDateQuery.setUserQuery($scope.userquery),SolrSearchService.setQuery($scope.endDateQueryName,endDateQuery),SolrSearchService.updateQuery($scope.endDateQueryName))},$scope.init=function(){Utils.applyAttributes($attrs,$scope),$scope.$on("$routeChangeSuccess",function(){$scope.handleUpdate()}),$scope.$on($scope.startDateQueryName,function(){$scope.handleStartDateQueryUpdate()}),$scope.$on($scope.endDateQueryName,function(){$scope.handleEndDateQueryUpdate()})},$scope.submit=function(){if($scope.startDate>$scope.endDate)return $scope.endDate=$scope._endDate,void($scope.startDate=$scope._startDate);hash=$routeParams.query||"",query=hash?SolrSearchService.getQueryFromHash(hash,$scope.source):SolrSearchService.createQuery($scope.source),query.removeFacet($scope.startDateField),query.removeFacet($scope.endDateField),start_value="[* TO "+$scope.endDate+"-12-31T23:59:59Z]",end_value="["+$scope.startDate+"-01-01T00:00:00Z TO *]",f=query.createFacet($scope.startDateField,start_value),query.addFacet(f),f=query.createFacet($scope.endDateField,end_value),query.addFacet(f),hash=query.getHash(),$location.path(hash)},$scope.init()}]),angular.module("ngSolr").controller("DateFacetHistogramController",["$scope","$attrs","$location","$log","$route","$routeParams","SolrSearchService","Utils",function($scope,$attrs,$location,$log,$route,$routeParams,SolrSearchService,Utils){var bin,count,date,endDateResults,i,item,query,startDateResults,userquery;$scope._endDate=0,$scope._startDate=0,$scope.endDate=0,$scope.endDateField="toDate",$scope.endDateQueryName="endDateQuery",$scope.histogram=[],$scope.histogramHeight=100,$scope.histogramMaxBins=10,$scope.histogramQueryName="histogramQuery",$scope.histogramWidth=240,$scope.source=void 0,$scope.startDate=0,$scope.startDateField="fromDate",$scope.startDateQueryName="startDateQuery",$scope.target=SolrSearchService.defaultQueryName,$scope.updateFlag=0,$scope.updateHistogram=!0,$scope.updateOnInit=!1,$scope.updateOnTargetChange=!0,$scope.getFirstDateRecord=function(Items,FieldName){return Items&&Items.docs&&Items.docs.length>0&&(item=Items.docs[0],void 0!==(date=item[FieldName]))?(i=date.indexOf("-"),date.substring(0,i)):0},$scope.handleEndDateQueryUpdate=function(){endDateResults=SolrSearchService.getResponse($scope.endDateQueryName),endDateResults&&($scope._endDate=$scope.getFirstDateRecord(endDateResults,$scope.endDateField),$scope.endDate=$scope.getFirstDateRecord(endDateResults,$scope.endDateField)),$scope.updateFlag++,$scope.updateHistogram&&0===$scope.updateFlag&&$scope.updateHistogram()},$scope.handleHistogramQueryUpdate=function(Event){i=Event.name.indexOf("_"),bin=Event.name.substring(i+1,Event.name.length),query=SolrSearchService.getQuery(Event.name),count=query.response.numFound,$scope.histogram[bin].count=count,$scope.updateHistogramChart()},$scope.handleStartDateQueryUpdate=function(){startDateResults=SolrSearchService.getResponse($scope.startDateQueryName),startDateResults&&($scope._startDate=$scope.getFirstDateRecord(startDateResults,$scope.startDateField),$scope.startDate=$scope.getFirstDateRecord(startDateResults,$scope.startDateField)),$scope.updateFlag++,$scope.updateHistogram&&0===$scope.updateFlag&&$scope.updateHistogram()},$scope.handleTargetQueryUpdate=function(){query=SolrSearchService.getQuery($scope.target),userquery=query.getUserQuery(),query=SolrSearchService.getQuery($scope.startDateQueryName),query.setUserQuery(userquery),query=SolrSearchService.getQuery($scope.endDateQueryName),query.setUserQuery(userquery),$scope.updateFlag=-2,SolrSearchService.updateQuery($scope.startDateQueryName),SolrSearchService.updateQuery($scope.endDateQueryName)},$scope.init=function(){Utils.applyAttributes($attrs,$scope),$scope.$on("$routeChangeSuccess",function(){if($scope.query=$routeParams.query||"",$scope.query){var query=SolrSearchService.getQueryFromHash($scope.query,$scope.source);$scope.userquery=query.getUserQuery()}var startDateQuery=SolrSearchService.createQuery();startDateQuery.setOption("fl",$scope.startDateField),startDateQuery.setOption("rows","1"),startDateQuery.setOption("sort",$scope.startDateField+" asc"),startDateQuery.setUserQuery($scope.userquery),SolrSearchService.setQuery($scope.startDateQueryName,startDateQuery);var endDateQuery=SolrSearchService.createQuery();endDateQuery.setOption("fl",$scope.endDateField),endDateQuery.setOption("rows","1"),endDateQuery.setOption("sort",$scope.endDateField+" desc"),endDateQuery.setUserQuery($scope.userquery),SolrSearchService.setQuery($scope.endDateQueryName,endDateQuery),$scope.updateOnInit&&($scope.updateFlag=-2,SolrSearchService.updateQuery($scope.startDateQueryName),SolrSearchService.updateQuery($scope.endDateQueryName))}),$scope.$on($scope.startDateQueryName,function(){$scope.handleStartDateQueryUpdate()}),$scope.$on($scope.endDateQueryName,function(){$scope.handleEndDateQueryUpdate()})},$scope.submit=function(){if($scope.startDate<=$scope.endDate){var query=SolrSearchService.getQuery($scope.target);if(query){var dateRange=$scope.getDateRangeConstraint($scope.startDateField,$scope.startDate,$scope.endDateField,$scope.endDate);query.setQueryParameter("dateRange",dateRange),SolrSearchService.updateQuery($scope.target)}}else $scope.endDate=$scope._endDate,$scope.startDate=$scope._startDate,$log.info("WARNING: start date is greater than end date")},$scope.updateHistogram=function(){var bin,binRange,dateRange,end,histogramQuery,histogramQueryName,i,range,start;for($scope.histogram=[],range=Math.ceil($scope.endDate-$scope.startDate),binRange=Math.ceil(range/$scope.histogramMaxBins),i=0;i<$scope.histogramMaxBins;i++)start=Number($scope.startDate)+binRange*i,end=start+binRange,bin={},bin.start=start,bin.end=end>$scope.endDate?$scope.endDate:end,bin.label=start+" to "+bin.end,bin.count=10*i+5,$scope.histogram.push(bin);for(i=0;i<$scope.histogram.length;i++)bin=$scope.histogram[i],histogramQuery=SolrSearchService.createQuery(),histogramQueryName=$scope.histogramQueryName+"_"+i,dateRange=$scope.getDateRangeConstraint($scope.startDateField,bin.start,$scope.endDateField,bin.end),histogramQuery.setOption("rows","0"),histogramQuery.setQueryParameter("dateRange",dateRange),SolrSearchService.setQuery(histogramQueryName,histogramQuery),$scope.$on(histogramQueryName,function(histogramQueryName){$scope.handleHistogramQueryUpdate(histogramQueryName)}),SolrSearchService.updateQuery(histogramQueryName)},$scope.updateHistogramChart=function(){var margin={top:0,right:10,bottom:0,left:0},height=$scope.histogramHeight-margin.top-margin.bottom,width=$scope.histogramWidth-margin.left-margin.right,formatPercent=d3.format(".0%");d3.select("#date-range-histogram").select("svg").remove();var svg=d3.select("#date-range-histogram").append("svg").attr("width",width+margin.left+margin.right).attr("height",height+margin.top+margin.bottom).append("g").attr("transform","translate("+margin.left+","+margin.top+")"),max=d3.max($scope.histogram,function(d){return d.count}),x=d3.scale.ordinal().rangeBands([$scope.startYear,$scope.endYear]),y=d3.scale.log().domain([0,max]).rangeRound([0,height]);d3.svg.axis().scale(x).orient("bottom"),d3.svg.axis().scale(y).orient("left").tickFormat(formatPercent),x.domain([$scope.startYear,$scope.endYear]),y.domain([0,max]),d3.select("body").append("div").style("background","white").style("border","1px solid #ccc").style("position","absolute").style("z-index","10").style("visibility","hidden").text("a simple tooltip"),svg.selectAll(".bar").data($scope.histogram).enter().append("rect").attr("id",function(d,i){return"histogramBar_"+i}).attr("class","bar").attr("x",function(d,i){return i*(width+margin.left+margin.right)/$scope.histogramMaxBins}).attr("width",(width+margin.left+margin.right)/$scope.histogramMaxBins-1).attr("y",function(d){return height-height*d.count/max}).attr("height",function(d){return height*d.count/max}).on("click",function(d){$scope.endDate=d.end,$scope.startDate=d.start,$scope.submit()}),svg.selectAll(".bar").data($scope.histogram).exit().remove()}}]),angular.module("ngSolr").controller("DocumentSearchResultsController",["$scope","$attrs","$location","$route","$routeParams","$window","SolrSearchService","Utils",function($scope,$attrs,$location,$route,$routeParams,$window,SolrSearchService,Utils){function Page(Name,Num){this.name=Name,this.number=Num,this.isCurrent=!1}$scope.documents=[],$scope.documentsPerPage=10,$scope.loading=!1,$scope.page=0,$scope.pages=[],$scope.pagesPerSet=10,$scope.queryName=SolrSearchService.defaultQueryName,$scope.source=void 0,$scope.start=0,$scope.totalPages=1,$scope.totalResults=0,$scope.totalSets=1,$scope.updateLocationOnChange=!0,$scope.userquery="",$scope.handleSetPage=function(Start){var query=SolrSearchService.getQuery($scope.queryName),oldHash=query.getHash();if(query.setOption("start",Start*$scope.documentsPerPage),$scope.updateLocationOnChange){var hash=query.getHash();$location.path($location.path().replace(oldHash,hash)),$window.scrollTo(0,0)}else $scope.loading=!0,SolrSearchService.updateQuery($scope.queryName)},$scope.handleUpdate=function(){$scope.documents=[],$scope.loading=!1;var results=SolrSearchService.getResponse($scope.queryName);if(results&&results.docs){$scope.totalResults=results.numFound,$scope.totalPages=Math.ceil($scope.totalResults/$scope.documentsPerPage),$scope.totalSets=Math.ceil($scope.totalPages/$scope.pagesPerSet);for(var i=0;i<results.docs.length&&i<$scope.documentsPerPage;i++)results.docs[i].fromDate=Utils.formatDate(results.docs[i].fromDate),results.docs[i].toDate=Utils.formatDate(results.docs[i].toDate),$scope.documents.push(results.docs[i])}else $scope.documents=[],$scope.totalResults=0,$scope.totalPages=1,$scope.totalSets=1;$scope.updatePageIndex()},$scope.init=function(){for(var key in $attrs)$scope.hasOwnProperty(key)&&("documentsPerPage"===key||"pagesPerSet"===key?$scope[key]=parseInt($attrs[key]):"true"===$attrs[key]||"false"===$attrs[key]?$scope[key]="true"===$attrs[key]:$scope[key]=$attrs[key]);$scope.$on("$routeChangeSuccess",function(){if($scope.query=$routeParams.query||"",$scope.query){$scope.loading=!1;var query=SolrSearchService.getQueryFromHash($scope.query,$scope.source);$scope.source&&(query.solr=$scope.source),query.setOption("rows",$scope.documentsPerPage),$scope.userquery=query.getUserQuery(),SolrSearchService.setQuery($scope.queryName,query),$scope.loading=!0,SolrSearchService.updateQuery($scope.queryName)}}),$scope.$on($scope.queryName,function(){$scope.handleUpdate()})},$scope.updatePageIndex=function(){var query=SolrSearchService.getQuery($scope.queryName);$scope.documentsPerPage=query.getOption("rows")||$scope.documentsPerPage,$scope.page=Math.ceil(query.getOption("start")/$scope.documentsPerPage)||0,$scope.pages=[];var currentSet=Math.floor($scope.page/$scope.pagesPerSet),firstPageInSet=currentSet*$scope.pagesPerSet+1,lastPageInSet=firstPageInSet+$scope.pagesPerSet-1;if(lastPageInSet>$scope.totalPages&&(lastPageInSet=$scope.totalPages),$scope.totalSets>1&&0!==currentSet){var previousSet=firstPageInSet-$scope.pagesPerSet-1,prevPage=new Page("«",previousSet);$scope.pages.push(prevPage)}for(var i=firstPageInSet;i<=lastPageInSet;i++){var page=new Page(i,i-1);page.number===$scope.page&&(page.isCurrent=!0),$scope.pages.push(page)}if($scope.totalSets>1&&currentSet<$scope.totalSets-1){var nextSet=lastPageInSet,nextPage=new Page("»",nextSet);$scope.pages.push(nextPage)}},$scope.init()}]),angular.module("ngSolr").controller("FacetSelectionController",["$scope","$attrs","$location","$route","$routeParams","$window","SolrSearchService",function($scope,$attrs,$location,$route,$routeParams,$window,SolrSearchService){var hash,key,query;$scope.items=[],$scope.source=void 0,$scope.target=SolrSearchService.defaultQueryName,$scope.remove=function(Index){query=SolrSearchService.getQuery($scope.target);var oldHash=query.getHash();query.removeFacetByIndex(Index),hash=query.getHash(),$location.path($location.path().replace(oldHash,hash))},$scope.handleUpdate=function(){hash=$routeParams.query||"",(query=SolrSearchService.getQueryFromHash(hash,$scope.source))&&($scope.items=query.getFacets())},$scope.init=function(){for(key in $attrs)$scope.hasOwnProperty(key)&&($scope[key]=$attrs[key]);$scope.$on("$routeChangeSuccess",function(){$scope.handleUpdate()})},$scope.init()}]),angular.module("ngSolr").controller("FieldFacetController",["$scope","$attrs","$location","$route","$routeParams","$window","SolrSearchService",function($scope,$attrs,$location,$route,$routeParams,$window,SolrSearchService){function FacetResult(Value,Score){this.value=Value,this.score=Score}var count,f,facet,facet_fields,facets,facet_query,hash,i,key,name,query,results,s,selected_values,value;$scope.exclusive=!0,$scope.facetQuery="facetQuery",$scope.facets=[],$scope.field="",$scope.items=[],$scope.maxItems=7,$scope.queryName=SolrSearchService.defaultQueryName,$scope.selected=!1,$scope.source=void 0,$scope.add=function($event,Index){if(query=SolrSearchService.getQuery($scope.queryName),void 0===query&&(query=SolrSearchService.createQuery($scope.source)),name=$scope.field,value="("+$scope.items[Index].value.replace(new RegExp(":","g")," ").split(" ").join("*")+")",facet=query.createFacet(name,value),-1===$scope.facets.indexOf(facet)){var oldHash=query.getHash();query.addFacet(facet),query.options.start=0,hash=query.getHash(),$location.path()?$location.path($location.path().replace(oldHash,hash)):$location.path(hash)}$event.preventDefault()},$scope.handleUpdate=function(){for($scope.items=[],$scope.selected=!1,selected_values=[],hash=$routeParams.query||void 0,query=hash?SolrSearchService.getQueryFromHash(hash,$scope.source):SolrSearchService.createQuery($scope.source),facets=query.getFacets(),i=0;i<facets.length;i++)f=facets[i],f.field.indexOf($scope.field)>-1&&($scope.selected=!0,s=f.value.replace(/([\(\[\)\]])+/g,""),s=s.replace(/\*/g," "),selected_values.push(s));if(facet_query=SolrSearchService.getQuery($scope.facetQuery),(results=facet_query.getFacetCounts())&&results.hasOwnProperty("facet_fields"))for(facet_fields=results.facet_fields[$scope.field].length>2*$scope.maxItems?results.facet_fields[$scope.field].splice(0,$scope.maxItems):results.facet_fields[$scope.field],i=0;i<facet_fields.length;i+=2)value=results.facet_fields[$scope.field][i],-1===selected_values.indexOf(value)&&(count=results.facet_fields[$scope.field][i+1],facet=new FacetResult(value,count),$scope.items.push(facet))},$scope.init=function(){for(key in $attrs)$scope.hasOwnProperty(key)&&($scope[key]=$attrs[key]);$scope.facetQuery=$scope.field+"Query",$scope.$on($scope.facetQuery,function(){$scope.handleUpdate()}),$scope.$on("$routeChangeSuccess",function(){hash=$routeParams.query||void 0,query=hash?SolrSearchService.getQueryFromHash(hash,$scope.source):SolrSearchService.createQuery($scope.source),query.setOption("facet","true"),query.setOption("facet.field",$scope.field),query.setOption("facet.limit",$scope.maxItems),query.setOption("facet.mincount","1"),query.setOption("facet.sort","count"),query.setOption("rows","0"),query.setOption("wt","json"),SolrSearchService.setQuery($scope.facetQuery,query),SolrSearchService.updateQuery($scope.facetQuery)})},$scope.init()}]),angular.module("ngSolr").controller("ImageSearchResultsController",["$scope","$attrs","$location","$route","$routeParams","$window","SolrSearchService",function($scope,$attrs,$location,$route,$routeParams,$window,SolrSearchService){function Page(Name,Num){this.name=Name,this.number=Num,this.isCurrent=!1}$scope.documentsPerPage=16,$scope.documentsPerRow=4,$scope.fields="*",$scope.loading=!1,$scope.page=0,$scope.pages=[],$scope.pagesPerSet=10,$scope.rows=[],$scope.queryName=SolrSearchService.defaultQueryName,$scope.source=void 0,$scope.startPage=0,$scope.totalPages=1,$scope.totalResults=0,$scope.totalSets=1,$scope.handleSetPage=function(Start){var query=SolrSearchService.getQuery($scope.queryName);query.setOption("start",Start*$scope.documentsPerPage);var hash=query.getHash();$location.path(hash),$window.scrollTo(0,0)},$scope.handleUpdate=function(){$scope.rows=[];var results=SolrSearchService.getResponse($scope.queryName);if(results&&results.docs){$scope.totalResults=results.numFound,$scope.totalPages=Math.ceil($scope.totalResults/$scope.documentsPerPage),$scope.totalSets=Math.ceil($scope.totalPages/$scope.pagesPerSet);for(var count=0,row=[],i=0;i<results.docs.length&&i<$scope.documentsPerPage;i++)row.push(results.docs[i]),(++count>=$scope.documentsPerRow||i===results.docs.length-1)&&(count=0,$scope.rows.push(row),row=[])}else $scope.rows=[],$scope.totalResults=0,$scope.totalPages=1,$scope.totalSets=1;$scope.updatePageIndex()},$scope.init=function(){for(var key in $attrs)$scope.hasOwnProperty(key)&&("documentsPerPage"===key||"documentsPerRow"===key||"pagesPerSet"===key?$scope[key]=parseInt($attrs[key]):"true"===$attrs[key]||"false"===$attrs[key]?$scope[key]="true"===$attrs[key]:$scope[key]=$attrs[key]);$scope.$on($scope.queryName,function(){$scope.handleUpdate()}),$scope.$on("$routeChangeSuccess",function(){if($scope.query=$routeParams.query||"",$scope.query){var query=SolrSearchService.getQueryFromHash($scope.query,$scope.source);$scope.source&&(query.solr=$scope.source),$scope.documentsPerPage=query.getOption("rows")||10,$scope.page=Math.ceil(query.getOption("start")/$scope.documentsPerPage)||0,$scope.userquery=query.getUserQuery(),SolrSearchService.setQuery($scope.queryName,query),SolrSearchService.updateQuery($scope.queryName)}})},$scope.updatePageIndex=function(){$scope.pages=[];var currentSet=Math.floor($scope.page/$scope.pagesPerSet),firstPageInSet=currentSet*$scope.pagesPerSet+1,lastPageInSet=firstPageInSet+$scope.pagesPerSet-1;if(lastPageInSet>$scope.totalPages&&(lastPageInSet=$scope.totalPages),$scope.totalSets>1&&0!==currentSet){var previousSet=firstPageInSet-$scope.pagesPerSet-1,prevPage=new Page("«",previousSet);$scope.pages.push(prevPage)}for(var i=firstPageInSet;i<=lastPageInSet;i++){var page=new Page(i,i-1);page.number===$scope.page&&(page.isCurrent=!0),$scope.pages.push(page)}if($scope.totalSets>1&&currentSet<$scope.totalSets-1){var nextSet=lastPageInSet,nextPage=new Page("»",nextSet);$scope.pages.push(nextPage)}},$scope.init()}]),angular.module("ngSolr").controller("MapController",["$scope","$attrs","$location","$log","$route","$routeParams","SolrSearchService","SelectionSetService","Utils",function($scope,$attrs,$location,$log,$route,$routeParams,SolrSearchService,SelectionSetService,Utils){var i,lat,lng;$scope.categoryToIconMap={default:"img/icon/house.png",corporateBody:"img/icon/corporatebody.png",government:"img/icon/corporatebody.png",organization:"img/icon/corporatebody.png",person:"img/icon/person.png"},$scope.centerOnStart=!0,$scope.clusterManager=null,$scope.clusterOptions={styles:[{height:24,url:"img/map/cluster1.png",width:24},{height:36,url:"img/map/cluster2.png",width:36},{height:48,url:"img/map/cluster3.png",width:48},{height:64,url:"img/map/cluster4.png",width:64},{height:82,url:"img/map/cluster5.png",width:82}]},$scope.clusterResults=!0,$scope.count=5e3,$scope.fields="*",$scope.firstUpdate=!0,$scope.idToMarkerMap={},$scope.infoWindow=new google.maps.InfoWindow,$scope.loading=!1,$scope.map=void 0,$scope.markers=[],$scope.maxFieldLength=120,$scope.queryName="mapQuery",$scope.settings={mapTypeControl:!1,mapTypeId:google.maps.MapTypeId.TERRAIN,navigationControl:!0,navigationControlOptions:{style:google.maps.NavigationControlStyle.SMALL},overviewMapControl:!1,panControl:!0,rotateControl:!0,scaleControl:!0,streetViewControl:!1,zoom:5,zoomControl:!0,zoomControlOptions:{style:google.maps.ZoomControlStyle.LARGE}},$scope.showMessages=!0,$scope.showErrors=!0,$scope.source=void 0,$scope.startLatitude=void 0,$scope.startLongitude=void 0,$scope.target="defaultQuery",$scope.createMapQuery=function(){var query=SolrSearchService.createQuery();return query.setOption("fl",$scope.fields),query.setOption("rows",$scope.count),query.addQueryParameter("+location_0_coordinate:*"),query},$scope.getMarker=function(Map,Title,Content,Category,Lat,Lng){var icon=$scope.categoryToIconMap.default;return null!==Category&&Category in $scope.categoryToIconMap&&(icon=$scope.categoryToIconMap[Category]),new google.maps.Marker({icon:icon,map:Map,position:new google.maps.LatLng(Lat,Lng),title:Title,content:Content})},$scope.getMarkerContent=function(Item){var content='<div class="infowindow">';return Item.dobj_proxy_small&&(content+='<div class="thumb"><a href="'+Item.presentation_url+'"><img src="'+Item.dobj_proxy_small+'" /></a></div>'),content+='<div class="title"><a href="'+Item.presentation_url+'">'+Item.title+"</a></div>",content+='<div class="existdates">'+Utils.formatDate(Item.fromDate)+" - "+Utils.formatDate(Item.toDate)+"</div>",content+='<div class="summary">'+Utils.truncate(Item.abstract,$scope.maxFieldLength)+" ",content+='<a href="'+Item.presentation_url+'" class="more">more</a></div>',content+="</div>"},$scope.handleSelection=function(){$log.info("Map selection updated");var selected=SelectionSetService.getSelectionSet();if(selected){var keys=[];for(var key in selected)selected.hasOwnProperty(key)&&keys.push(key);if(keys.length>0){var id=keys[0],marker=$scope.idToMarkerMap[id];if(marker){var bounds=new google.maps.LatLngBounds;bounds.extend(marker.position),google.maps.event.trigger(marker,"click"),$scope.map.fitBounds(bounds)}}}},$scope.handleUpdate=function(){var bounds=new google.maps.LatLngBounds,results=SolrSearchService.getResponse($scope.queryName);if(results&&results.docs)for(i=0;i<results.docs.length;i++){var item=results.docs[i];if(item.location){lat="string"==typeof item.location_0_coordinate?item.location_0_coordinate:item.location_0_coordinate[0],lng="string"==typeof item.location_1_coordinate?item.location_1_coordinate:item.location_1_coordinate[0];var content=$scope.getMarkerContent(item),marker=$scope.getMarker($scope.map,item.title,content,item.type,lat,lng);$scope.idToMarkerMap[item.id]=marker,$scope.markers.push(marker),$scope.oms.addMarker(marker),bounds.extend(marker.position)}}$scope.map.fitBounds(bounds)},$scope.init=function(){if(Utils.applyAttributes($attrs,$scope),$scope.map=new google.maps.Map(document.getElementById("map"),$scope.settings),$scope.oms=new OverlappingMarkerSpiderfier($scope.map),$scope.oms.addListener("click",function(Marker){$scope.infoWindow.close(),$scope.infoWindow.setContent(Marker.content),$scope.infoWindow.open($scope.map,Marker)}),$scope.$on($scope.queryName,function(){$scope.handleUpdate()}),$scope.$on("selectionSetUpdate",function(){$scope.handleSelection()}),$scope.$on("$routeChangeSuccess",function(){if($scope.query=$routeParams.query||"",$scope.query){$scope.loading=!1;var query=SolrSearchService.getQueryFromHash($scope.query,$scope.source);$scope.source&&(query.solr=$scope.source),$scope.infoWindow.close(),$scope.idToMarkerMap={},$scope.markers=[],SolrSearchService.setQuery($scope.queryName,query),$scope.loading=!0,SolrSearchService.updateQuery($scope.queryName)}}),$scope.startLatitude&&$scope.startLongitude){var point=new google.maps.LatLng($scope.startLatitude,$scope.startLongitude);$scope.map.setCenter(point,8)}else{var bounds=new google.maps.LatLngBounds;$scope.map.fitBounds(bounds)}},$scope.setInfoWindow=function(Map,Marker,Content){$scope.oms.addListener("click",function(Marker){$scope.infoWindow.close(),$scope.infoWindow.setContent(Content),$scope.infoWindow.open(Map,Marker)})},$scope.init()}]),angular.module("ngSolr").controller("MapSelectionController",["$scope","$attrs","$log","SelectionSetService",function($scope,$attrs,$log,SelectionSetService){$scope.singleSelection=!0,$scope.clearSelection=function(Id){try{SelectionSetService.remove(Id),SelectionSetService.clear()}catch(err){$log.info(err.message)}},$scope.init=function(){for(var key in $attrs)$scope.hasOwnProperty(key)&&($scope[key]=$attrs[key])},$scope.select=function(Id){$scope.singleSelection&&SelectionSetService.clearSilent(),SelectionSetService.add(Id,null)},$scope.init()}]),angular.module("ngSolr").controller("SearchBoxController",["$scope","$attrs","$location","$route","$routeParams","$window","SolrSearchService","Utils",function($scope,$attrs,$location,$route,$routeParams,$window,SolrSearchService,Utils){var hash,hintlist,i,item,key,query,result,results,token,trimmed;$scope.hints=[],$scope.hintlist=[],$scope.maxHints=10,$scope.minSearchLength=3,$scope.nearMatch=!1,$scope.queryName=SolrSearchService.defaultQueryName,$scope.redirect=void 0,$scope.resetOnChange=!1,$scope.searchHintsField="hints",$scope.searchHintsQuery="searchHintsQuery",$scope.source=void 0,$scope.userquery="",$scope.getHintList=function(){$scope.hintlist=$scope.hints.splice(0,10)},$scope.getHints=function(){if(hintlist=[],$scope.userquery.length>=$scope.minSearchLength)for(i=0;$scope.hints.length,hintlist.length<$scope.maxHints;i++){token=$scope.hints[i];try{token.indexOf($scope.userquery)>-1&&hintlist.push(token)}catch(err){continue}}return hintlist},$scope.handleSubmit=function(){trimmed=Utils.trim($scope.userquery),""===trimmed&&($scope.userquery="*:*"),query=SolrSearchService.getQuery($scope.queryName),void 0===query&&(query=SolrSearchService.createQuery($scope.source)),query.setNearMatch($scope.nearMatch),query.setUserQuery($scope.userquery),hash=query.getHash(),$scope.redirect?$window.location.href=$scope.redirect+"#"+hash:$location.path(hash)},$scope.handleUpdate=function(){if(query=SolrSearchService.getQuery($scope.searchHintsQuery),
(results=query.getFacetCounts())&&results.hasOwnProperty("facet_fields")&&(result=results.facet_fields[$scope.searchHintsField]))for(i=0;i<result.length;i+=2)item=result[i].toLowerCase(),$scope.hints.push(item)},$scope.init=function(){for(key in $attrs)$scope.hasOwnProperty(key)&&("documentsPerPage"===key||"pagesPerSet"===key?$scope[key]=parseInt($attrs[key]):"true"===$attrs[key]||"false"===$attrs[key]?$scope[key]="true"===$attrs[key]:$scope[key]=$attrs[key]);$scope.$on("$routeChangeSuccess",function(){hash=$routeParams.query||"",""!==hash?(query=SolrSearchService.getQueryFromHash(hash,$scope.source),$scope.userquery=query.getUserQuery()):$scope.userquery=hash}),query=SolrSearchService.createQuery($scope.source),query.setOption("rows","0"),query.setOption("facet","true"),query.setOption("facet.limit","-1"),query.setOption("facet.field",$scope.searchHintsField),SolrSearchService.setQuery($scope.searchHintsQuery,query),$scope.$on($scope.searchHintsQuery,function(){$scope.handleUpdate()}),SolrSearchService.updateQuery($scope.searchHintsQuery)},$scope.init()}]),angular.module("ngSolr").controller("SearchHistoryController",["$scope","$attrs","SolrSearchService",function($scope,$attrs,SolrSearchService){var key,newquery,query;$scope.maxItems=5,$scope.queries=[],$scope.queryName="defaultQuery",$scope.init=function(){for(key in $attrs)$scope.hasOwnProperty(key)&&($scope[key]=$attrs[key]);$scope.$on($scope.queryName,function(){$scope.handleUpdate()})},$scope.handleUpdate=function(){newquery=SolrSearchService.getQuery($scope.queryName),$scope.queries.length>0?newquery.getUserQuery()!==$scope.queries[0].getUserQuery()&&($scope.queries.unshift(newquery),$scope.queries.length>$scope.maxItems&&$scope.queries.pop()):($scope.queries=[],$scope.queries.push(newquery))},$scope.setQuery=function(QueryIndex){QueryIndex>=0&&QueryIndex<=$scope.queries.length&&(query=$scope.queries[QueryIndex])},$scope.init()}]),angular.module("ngSolr").directive("searchhints",function(){return{restrict:"A",link:function(scope,element){element.autocomplete({delay:500,minLength:3,source:function(request,response){response($.ui.autocomplete.filter(scope.hints,request.term).slice(0,10))}})}}}).directive("searchbox",function(){return{link:function(scope,element){element.bind("keyup",function(event){13===event.keyCode?""!==scope.userquery&&scope.handleSubmit(scope.userquery):scope.userquery=event.target.value}),element.autocomplete({delay:500,minLength:3,source:function(request,response){response($.ui.autocomplete.filter(scope.hints,request.term).slice(0,10))}})},restrict:"A",scope:!1}}).directive("searchbutton",function(){return{link:function(scope,element){element.bind("click",function(){""!==scope.userquery&&scope.handleSubmit(scope.userquery)})},restrict:"A",scope:!1}}),angular.module("ngSolr").directive("searchbox",["$location","$log","$routeParams","$timeout","$window","SolrSearchService","Utils",function($location,$log,$routeParams,$timeout,$window,SolrSearchService,Utils){return{link:function(scope,element,attrs){scope.showHints=!1,scope.hints=[],scope.maxHints=10,scope.messages=["Enter one or more search terms. Press Enter to search.","Key up or down to navigate hints. Press Enter to search.","Press Enter to search."],scope.message=scope.messages[0],scope.minSearchLength=3,scope.nearMatch=!1,scope.placeHolder="Keyword or place name",scope.queryBuffer=[],scope.redirect=void 0,scope.resetOnChange=!1,scope.searchHintsField="hints",scope.searchHintsQuery="hintsQuery",scope.selectedHint=-1,scope.showMessage=!0,scope.source=void 0,scope.timeout=void 0,scope.userQuery="",scope.clearHintSelection=function(){-1!==scope.selectedHint&&(scope.hints[scope.selectedHint].selected=!1)},scope.handleRouteChange=function(){var hash=$routeParams.query||"";if(""!==hash){var query=SolrSearchService.getQueryFromHash(hash,scope.source);scope.userQuery=query.getUserQuery()}else scope.userQuery=hash},scope.handleSubmit=function(){""===Utils.trim(scope.userQuery)&&(scope.userQuery="*:*");var query=SolrSearchService.getQuery(scope.queryName);void 0===query&&(query=SolrSearchService.createQuery(scope.source)),query.setNearMatch(scope.nearMatch),query.setUserQuery(scope.userQuery);var hash=query.getHash();scope.redirect?$window.location.href=scope.redirect+"#"+hash:$location.path(hash)},scope.handleUpdate=function(){scope.message=scope.messages[1];var query=SolrSearchService.getQuery(scope.searchHintsQuery),results=query.getFacetCounts();if(results&&results.hasOwnProperty("facet_fields")){scope.hints=[];var result=results.facet_fields[scope.searchHintsField];if(result)for(var i=0;i<result.length;i+=2){var hint={title:result[i],selected:!1};scope.hints.push(hint)}}},scope.highlightHint=function(index){scope.hints[index].selected=!0,scope.$apply()},scope.resetHintSelection=function(){scope.clearHintSelection(),scope.selectedHint=-1,scope.hints=[],scope.message=scope.messages[0]},scope.init=function(){for(var key in attrs)scope.hasOwnProperty(key)&&("documentsPerPage"===key||"pagesPerSet"===key?scope[key]=parseInt(attrs[key]):"true"===attrs[key]||"false"===attrs[key]?scope[key]="true"===attrs[key]:scope[key]=attrs[key]);var children=element.children();scope.form_div=children[0],scope.query_input=scope.form_div.querySelector("#query"),scope.hints_div=scope.form_div.querySelector("#hints"),scope.hints_list=scope.form_div.querySelector("#list"),scope.hints_message=scope.form_div.querySelector("#message"),scope.query_input.onfocus=scope.onfocus,scope.query_input.onblur=scope.onblur,scope.query_input.onkeyup=scope.onkeyup,scope.$on("$routeChangeSuccess",function(){scope.handleRouteChange()}),scope.$on(scope.searchHintsQuery,scope.handleUpdate)},scope.onblur=function(){scope.showHints=!1,scope.resetHintSelection(),scope.$apply()},scope.onfocus=function(){var width=scope.query_input.offsetWidth-2;scope.hints_div.setAttribute("style","width:"+width+"px"),scope.showHints=!0,scope.$apply()},scope.onkeyup=function(event){scope.showHints=!0,"13"===event.keyCode?(-1!==scope.selectedHint&&scope.selectHint(scope.selectedHint),scope.handleSubmit(),scope.onblur()):"27"===event.keyCode?(scope.showHints=!1,scope.resetHintSelection(),scope.$apply()):"38"===event.keyCode?(scope.clearHintSelection(),scope.selectedHint<1?scope.selectedHint=scope.hints.length-1:scope.selectedHint-=1,scope.highlightHint(scope.selectedHint)):"40"===event.keyCode?(scope.clearHintSelection(),scope.selectedHint<scope.hints.length-1?scope.selectedHint+=1:scope.selectedHint=0,scope.highlightHint(scope.selectedHint)):scope.userQuery.length>=scope.minSearchLength&&(scope.timeout&&$timeout.cancel(scope.timeout),scope.timeout=$timeout(function(){var query=SolrSearchService.createQuery(scope.source);query.setOption("rows","0"),query.setOption("facet","true"),query.setOption("facet.limit",scope.maxHints),query.setOption("facet.field",scope.searchHintsField),query.setNearMatch(scope.nearMatch),query.setUserQuery(scope.userQuery),SolrSearchService.setQuery(scope.searchHintsQuery,query),SolrSearchService.updateQuery(scope.searchHintsQuery)},350))},scope.selectHint=function(index){var hint=scope.hints[index];scope.userQuery=hint.title},scope.init()},replace:!1,restrict:"E",scope:{showHints:"&",nearMatch:"@",placeHolder:"@",queryName:"@",searchHintsField:"@",source:"@"},template:'<form><div id="inputs" class="input-group"><input id="query" type="text" placeholder="{{placeHolder}}" ng-model="userQuery" autocomplete="off" /><div class="input-group-btn"><button id="submit" type="button" class="btn btn-default" ng-click="handleSubmit()">Search</button></div></div><div id="hints" ng-show="showHints"><ul id="list"><li ng-repeat="hint in hints" ng-mousedown="selectHint($index,true);handleSubmit()" ng-class="{\'selected\':hint.selected}">{{hint.title}}</li></ul><div id="message" ng-show="showMessage">{{message}}</div></div></form>',transclude:!0}}]),angular.module("ngSolr").filter("cleanFacetLabel",function(){return function(text){var val=text.split("(").join("");return val=val.split(")").join(""),val=val.split("[").join(""),val=val.split("]").join(""),val=val.split("*").join(" "),val=val.split("%2A").join(" "),val=val.split("?").join(" "),val=val.split("%3F").join(" ")}}).filter("prettyFacetLabel",function(){return function(facet){var result=facet.field.replace(/([A-Z])/g," $1"),label=result.charAt(0).toUpperCase()+result.slice(1),val=facet.value.split("(").join("");return val=val.split(")").join(""),val=val.split("[").join(""),val=val.split("]").join(""),val=val.split("*").join(" "),val=val.split("%2A").join(" "),val=val.split("?").join(" "),val=val.split("%3F").join(" "),val=val.replace(" TO ",""),val=val.replace("-01-01T00:00:00Z",""),val=val.replace("-12-31T23:59:59Z",""),label+": "+val}}).filter("strip",function(){return function(text){if(void 0===text)return text;var i=text.indexOf(", ");return-1!==i?text.substring(i+2):text}}).filter("substitute",function(){var map={ACT:"Australian Capital Territory",NSW:"New South Wales",NA:"Australia",NT:"Northern Territory",QLD:"Queensland",SA:"South Australia",TAS:"Tasmania",VIC:"Victoria",WA:"Western Australia"};return function(text){return text in map?map[text]:text}}).filter("swapFacetLabels",function(){return function(label){return 0===label.indexOf("fromDate")?label="toDate"+label.substring(8):0===label.indexOf("From Date")?label="To Date"+label.substring(9):0===label.indexOf("toDate")?label="fromDate"+label.substring(6):0===label.indexOf("To Date")?label="From Date"+label.substring(7):0===label.indexOf("Localtype")&&(label="Type"+label.substring(9)),label}}).filter("trim",function(){return function(text){return void 0===text?text:text.replace(/^\s\s*/,"").replace(/\s\s*$/,"")}}).filter("truncate",function(){return function(text,limit){if(void 0===text)return text;if(text.length>limit){var t=text.substring(0,Math.min(limit,text.length)),i=t.lastIndexOf(" ");if(-1!==i)return text.substring(0,i)+" ..."}return text}}),angular.module("ngSolr").factory("SelectionSetService",["$rootScope",function($rootScope){var svc={};return svc.documents={},svc.multipleSelection=!1,Array.prototype.remove=function(from,to){var rest=this.slice((to||from)+1||this.length);return this.length=from<0?this.length+from:from,this.push.apply(this,rest)},svc.add=function(Key,Doc){svc.multipleSelection||(svc.documents={}),svc.documents[Key]=Doc,$rootScope.$broadcast("selectionSetUpdate")},svc.clear=function(){svc.documents={},$rootScope.$broadcast("selectionSetUpdate")},svc.clearSilent=function(){svc.documents={}},svc.get=function(Key){return svc.documents[Key]},svc.getSelectionSet=function(){return svc.documents},svc.remove=function(Key){delete svc.documents[Key],$rootScope.$broadcast("selectionSetUpdate")},svc}]),angular.module("ngSolr").factory("SolrSearchService",["$http","$log","$q","$rootScope","$sce",function($http,$log,$q,$rootScope,$sce){var defaultQuery=function(query){return query.setOption("fl","*"),query.setOption("rows",10),query.setOption("wt","json"),query.setUserQuery("*:*"),query};this.setDefaultQuery=function(Query){defaultQuery=Query};var svc={};return svc.defaultQueryName="defaultQuery",svc.queries={},svc.createQuery=function(Core){var query=new SolrQuery(Core);return defaultQuery(query)},svc.getQuery=function(Name){try{return svc.queries[Name]}catch(Err){return void $log.debug("No query named "+Name+" available")}},svc.getQueryComponents=function(Query){for(var parts=[];Query.length>0;){Query=Query.replace(/^\s\s*/,"");var x=Query.indexOf(" +"),y=Query.indexOf(" -");if(-1===x&&-1===y)return parts.push(Query),parts;x>-1&&(-1===y||x<y)?(parts.push(Query.substring(0,x)),Query=Query.substring(x)):y>-1&&(parts.push(Query.substring(0,y)),Query=Query.substring(y))}return parts},svc.getQueryFromHash=function(Hash,CoreUrl){for(var query=svc.createQuery(CoreUrl),hash_elements=decodeURI(Hash).split("&"),i=0;i<hash_elements.length;i++){var element=hash_elements[i],eparts=element.split("=");if(svc.startsWith(element,"q")){var params=svc.getQueryComponents(element.substring(2));query.setUserQuery(params.shift());for(var j=0;j<params.length;j++)query.addQueryParameter(params[j])}else if(svc.startsWith(element,"fq")){var p=eparts[1].indexOf(":"),field=eparts[1].substring(0,p),value=eparts[1].substring(p+1),facet=new SolrFacet(field,value);query.addFacet(facet)}else{var name=eparts[0].replace("&","");2===eparts.length?query.setOption(name,eparts[1]):query.setOption(name,"")}}var userquery=query.getUserQuery();return-1!==userquery.indexOf("~",userquery.length-1)&&(userquery=userquery.substring(0,userquery.length-1),query.setUserQuery(userquery),query.setNearMatch(!0)),query},svc.getResponse=function(Name){try{return svc.queries[Name].response}catch(Err){$log.debug("Query "+Name+" not found")}},svc.setDefaultQuery=function(DefaultQuery){defaultQuery=DefaultQuery},svc.setQuery=function(Name,Query){svc.queries[Name]=Query},svc.startsWith=function(s1,s2){try{return s1.slice(0,s2.length)===s2}catch(Err){}return!1},svc.updateAllQueries=function(){for(var key in svc.queries)svc.updateQuery(key)},svc.updateQueriesInOrder=function(Queries){var p,q;for(q in Queries)void 0===p?p=svc.updateQuery(q):p.then(svc.updateQuery(q))},svc.updateQuery=function(QueryName){var query=svc.queries[QueryName],url=query.getSolrQueryUrl();return $log.debug("GET "+QueryName+": "+url),$http.jsonp($sce.trustAsResourceUrl(url),{jsonpCallbackParam:"json.wrf"}).then(function(result){query.setErrorMessage(null);var data=result.data;query.setHighlighting(data.highlighting),data.hasOwnProperty("facet_counts")&&query.setFacetCounts(data.facet_counts),query.setResponse(data.response),query.setResponseHeader(data.responseHeader),$rootScope.$broadcast(QueryName)},function(error){var msg="Could not get search results from server";$log.error(msg+" -> "+error);var response={};response.numFound=0,response.start=0,response.docs=[],query.setErrorMessage(msg),query.setFacetCounts([]),query.setHighlighting({}),query.setResponse(response),query.setResponseHeader({}),$rootScope.$broadcast(QueryName)})},svc}]),angular.module("ngSolr").factory("Utils",[function(){var d,day,i,key,month,months,p,parts,year,svc={};return svc.applyAttributes=function(attrs,scope){for(key in attrs)scope.hasOwnProperty(key)&&("true"===attrs[key]||"false"===attrs[key]?scope[key]="true"===attrs[key]:scope[key]=attrs[key])},svc.arraysAreEqual=function(A,B){return A.join("")===B.join("")},svc.convertMonthIndexToName=function(Index){return months={1:"January",2:"February",3:"March",4:"April",5:"May",6:"June",7:"July",8:"August",9:"September","01":"January","02":"February","03":"March","04":"April","05":"May","06":"June","07":"July","08":"August","09":"September",10:"October",11:"November",12:"December"},months[Index]},svc.formatDate=function(DateField){return DateField&&(i=DateField.indexOf("T"))?(d=DateField.substring(0,i),parts=d.split("-"),year=parts[0],month=svc.convertMonthIndexToName(parts[1]),day=svc.trimLeadingZero(parts[2]),month+", "+year):""},svc.objectsAreEqual=function(A,B){if(A===B)return!0;if(!(A instanceof Object&&B instanceof Object))return!1;if(A.constructor!==B.constructor)return!1;for(p in A)if(A.hasOwnProperty(p)){if(!B.hasOwnProperty(p))return!1;if(A[p]!==B[p]){if("object"!=typeof A[p])return!1;if(!svc.objectsAreEqual(A[p],B[p]))return!1}}for(p in B)if(B.hasOwnProperty(p)&&!A.hasOwnProperty(p))return!1;return!0},svc.startsWith=function(s1,s2){return!(!s1||!s2)&&s1.slice(0,s2.length)===s2},svc.trim=function(Val){return Val.replace(/^\s\s*/,"").replace(/\s\s*$/,"")},svc.trimLeadingZero=function(Val){return Val&&"0"===Val[0]?Val.substring(1):Val},svc.truncate=function(Field,Length){return Field&&Length&&Field.length>Length&&(Field=svc.trim(Field),Field=Field.substring(0,Math.min(Length,Field.length)),-1!==(i=Field.lastIndexOf(" "))&&(Field=Field.substring(0,i)+" ...")),Field},svc}]);
//# sourceMappingURL=ngsolr.min.js.map